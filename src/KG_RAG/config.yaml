ingestion:
  embedding-model: nomic-embed-text
  persist-dir: examples/example1/retrieval_store
  bm25-dir: bm25
  vectorstore-dir: vectorstore
  # dataset-dir: examples/datasets/MarineRestorationAnalysis # To index a new dataset

retrieval:
  topk: 5
  score-threshold: 0.4
  embedding-model: nomic-embed-text
  persist-dir: examples/example1/retrieval_store
  bm25-dir: bm25
  vectorstore-dir: vectorstore



generation:
  prompts:
    ner_question: >
      You are a very effective entity extraction system. Please extract all named entities that are important for
      solving the questions below. Place the named entities in JSON format following the provided example

      Example question: Which magazine was started first Arthur’s Magazine or First for Women?
      {"named_entities": ["First for Women", "Arthur’s Magazine"]}

      Question: 

    ner: >
      You are a very effective entity extraction system. Please extract all named entities in the following passage.
      Place the named entities in JSON format following the provided example

      Example input:
      Radio City
      Radio City is India’s first private FM radio station and was started on 3 July 2001. It plays Hindi, English
      and regional songs. Radio City recently forayed into New Media in May 2008 with the launch of a music
      portal - PlanetRadiocity.com that offers music related news, videos, songs, and other music-related
      features.

      Example output:
      {"named_entities": ["Radio City", "India", "3 July 2001", "Hindi","English", "May 2008", "PlanetRadiocity.com"]}

      Passage: 

    ner_triples: >
      Your task is to construct an RDF (Resource Description Framework) graph from the given passages and
      named entity lists.
      Respond with a JSON list of triples, with each triple representing a relationship in the RDF graph.
      Pay attention to the following requirements:
      - Each triple should contain at least one, but preferably two, of the named entities in the list for each
      passage.
      - Clearly resolve pronouns to their specific names to maintain clarity.
      Convert the paragraph into a JSON dict, it has a named entity list and a triple list.
      Please generate as many triples as possible, even if redundant. Pay very close attention to not omit any triples at all.

      Example input:
      Radio City
      Radio City is India’s first private FM radio station and was started on 3 July 2001. It plays Hindi, English
      and regional songs. Radio City recently forayed into New Media in May 2008 with the launch of a music
      portal - PlanetRadiocity.com that offers music related news, videos, songs, and other music-related
      features.
      {"named_entities": ["Radio City", "India", "3 July 2001", "Hindi","English", "May 2008", "PlanetRadiocity.com"]}
      
      Example output:
      {
        "triples": [
          ["Radio City", "country", "India"],
          ["Radio City", "type", "PrivateCompany"],
          ["Radio City", "type", "RadioStation"],
          ["Radio City", "launchDate", "3 July 2001"],
          ["Radio City", "language", "Hindi"],
          ["Radio City", "language", "English"],
          ["Radio City", "product", "New Media"],
          ["Radio City", "subsidiary", "PlanetRadiocity.com"],
          ["PlanetRadiocity.com", "launchDate", "May 2008"],
          ["PlanetRadiocity.com", "type", "Website"],
          ["PlanetRadiocity.com", "genre", "news"],
          ["PlanetRadiocity.com", "genre", "videos"],
          ["PlanetRadiocity.com", "genre", "songs"]
        ]
      }

      Question:
    

    ner_triples2: >
      Your task is to construct an RDF (Resource Description Framework) graph from the given passages and
      named entity lists.
      Respond with a JSON list of triples, with each triple representing a relationship in the RDF graph.
      Pay attention to the following requirements:
      - Each triple should contain at least one, but preferably two, of the named entities in the list for each
      passage.
      - Clearly resolve pronouns to their specific names to maintain clarity.
      Convert the paragraph into a JSON dict, it has a named entity list and a triple list.
      Please generate as many triples as possible, even if redundant. Pay very close attention to not omit any triples at all.

      Example input:
      Radio City
      Radio City is India’s first private FM radio station and was started on 3 July 2001. It plays Hindi, English
      and regional songs. Radio City recently forayed into New Media in May 2008 with the launch of a music
      portal - PlanetRadiocity.com that offers music related news, videos, songs, and other music-related
      features.
      {"named_entities": ["Radio City", "India", "3 July 2001", "Hindi","English", "May 2008", "PlanetRadiocity.com"]}
      
      Example output:
      {"triples":
        [
          ["Radio City", "located in", "India"],
          ["Radio City", "is", "private"]
          ["Radio City", "is", "FM radio station"],
          ["Radio City", "started on", "3 July 2001"],
          ["Radio City", "plays songs in", "Hindi"],
          ["Radio City", "plays songs in", "English"],
          ["Radio City", "forayed into", "New Media"],
          ["Radio City", "launched", "PlanetRadiocity.com"],
          ["PlanetRadiocity.com", "launched in", "May 2008"],
          ["PlanetRadiocity.com", "is", "music portal"],
          ["PlanetRadiocity.com", "offers", "news"],
          ["PlanetRadiocity.com", "offers", "videos"],
          ["PlanetRadiocity.com", "offers", "songs"]
        ]
      }

      Question:

    triples: >
      You are a highly intelligent language model trained to extract information from text in the form of triples (subject, predicate, object). A triple consists of three components:
      
      Subject: The entity or concept that the statement is about.
      Predicate: The action, relationship, or property that connects the subject and object.
      Object: The entity, concept, or value related to the subject. Given any text, you must only output a list of triples in this format: (subject, predicate, object). Avoid adding any explanations, commentary, or extra information.
      Here are examples:

      Example 1
      Input Text: "Marie Curie discovered radium in 1898." Output Triples:

      (Marie Curie, discovered, radium)
      (Radium, discovered in, 1898)
      Example 2
      Input Text: "The Eiffel Tower is located in Paris and was built in 1889." Output Triples:

      (Eiffel Tower, is located in, Paris)
      (Eiffel Tower, was built in, 1889)
      Example 3
      Input Text: "Albert Einstein developed the theory of relativity." Output Triples:

      (Albert Einstein, developed, theory of relativity)
      Now, extract triples from the following text.
      
    system: "Respond to all questions in a concise and direct manner"

    # Low quality/irrelevant/noisy data
    rag_prompt: >
      Examine all the provided data carefully and answer according to the given data. 
      If the data is completely irrelevant,you must mention that no relevant data are provided and answer according to your knowledge.
      You are given the following data:

  model: llama3.1:8b
  temperature: 0
